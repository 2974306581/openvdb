New Features:
    - Added nanovdb::IndexGrid that allows for arbitrary voxel values and even multiple channels to be associated with NanoVDB grids. They are more flexible and memory efficient than regular grids at a small cost of random-access performance. IndexGrids are constructed with the new nanovdb::IndexGridBuilder and accessed with the new nanovdb::ChannelAccessor.
    - Added iterators to all tree node classes for visiting inactive, active, or all values and child nodes.
    - NanoVDB.h now includes standalone implementations of reading and writing uncompressed nanovdb grids buffers.
    - Added Stats::getExtrema, which computes the min/max values of all voxels in a NanoVDB grid that intersects with a user-defined bounding-box.
    - Added nanovdb::Mask::countOn(int) which is essential to the new nanovdb::IndexGrid.
    - Added RootNode::probeChild and InternalNode::probeChild

Improvements:
    
    - Added a new much improved nanovdb::NodeManager, that is both faster and more memory efficient, and that works on both the CPU and GPU. Note, it uses an handle for allocation (just like nanovdb::Grid) and replaces the old nanovdb::LeafManager which is now deprecated.
    - NanoToOpenVDB is extended to work with grids templated on Fp4, Fp8, Fp16, FpN, bool and ValueMask.
    - Rename RootNode::findTile to RootNode::probeTile and made it public
    - Made Mask::getWord return both an const and non-const reference
    - Improved unit-tests to use explicit 32B alignment (see aligment bug-fix below)
    - PNanoVDB.h (a C99 port of NanoVDB.h) has been updated.

Bug Fixes:
    - Fixed a bug in nanovdb::HostBuffer that could produce crashes due to misaligned CPU memory allocations.
    - Fixed bug related to uninitialized memory in nanovdb::Grid which could confuse CRC32 checksum validation.
    - Fixed bugs related to the use of intrinsic functions for fast bit-counting in nanovdb.
    - Fixed a potential security vulnerability in NanoVDB.h related to buffer overflow exploits.
