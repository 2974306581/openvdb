PROJECT ( OpenVDB_Houdini )

FIND_PACKAGE ( HDK REQUIRED )


# This is to work around DWA way of doing stuff - REPEATED WITH VARIATION
MESSAGE ( "PROJECT_SOURCE_DIR = ${PROJECT_SOURCE_DIR}" )
MESSAGE ( "CMAKE_CURRENT_SOURCE_DIR = ${CMAKE_CURRENT_SOURCE_DIR}" )
FILE ( GLOB HOUDINI_UTILS_HEADER RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} houdini/*.h )

# This is to work around DWA way of doing stuff
SET  ( OPENVDB_HOUDINI_UTILS_DIR ${PROJECT_BINARY_DIR}/houdini_utils )
FILE ( MAKE_DIRECTORY ${OPENVDB_HOUDINI_UTILS_DIR} )
FILE ( COPY ${HOUDINI_UTILS_HEADER} DESTINATION ${OPENVDB_HOUDINI_UTILS_DIR} )

# This is to work around DWA way of doing stuff
SET  ( OPENVDB_HOUDINI_LOCAL_DIR ${PROJECT_BINARY_DIR}/openvdb_houdini )
FILE ( MAKE_DIRECTORY ${OPENVDB_HOUDINI_LOCAL_DIR} )
FILE ( COPY ${HOUDINI_UTILS_HEADER} DESTINATION ${OPENVDB_HOUDINI_LOCAL_DIR} )


INCLUDE_DIRECTORIES (
  # houdini
  ${OPENVDB_HOUDINI_UTILS_DIR}
  ${OPENVDB_HOUDINI_LOCAL_DIR}
  ${PROJECT_BINARY_DIR}
  ${HDK_INCLUDE_DIR}
  )

MESSAGE ( "HDK_DEFINITIONS = ${HDK_DEFINITIONS}" )

IF (NOT WIN32)
  ADD_DEFINITIONS ( -pthread -fPIC )
ENDIF ()

SET ( OPENVDB_HFS_INSTALL_BASE_DIR
  ${CMAKE_INSTALL_PREFIX}/houdini${HDK_VERSION_MAJOR}.${HDK_VERSION_MINOR}
  )

# RPath handling
IF ( OPENVDB_ENABLE_RPATH )

  # when building, don't use the install RPATH already
  # (but later on when installing)
  SET(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)

  # Use $ORIGIN for relative referencing
  # The second $ORIGIN is present because there is another shared library
  # specific to the SOPs that is not use elsewhere
  SET(CMAKE_INSTALL_RPATH "$ORIGIN/../../lib:$ORIGIN")
  # SET(CMAKE_INSTALL_RPATH "$ORIGIN")

ENDIF ( OPENVDB_ENABLE_RPATH )

ADD_LIBRARY ( openvdb_houdini SHARED
  houdini/GeometryUtil.cc
  houdini/GEO_PrimVDB.cc
  houdini/GT_GEOPrimCollectVDB.cc
  houdini/GU_PrimVDB.cc
  houdini/GU_VDBPointTools.cc
  houdini/geometry.cc
  houdini/ParmFactory.cc
  houdini/SOP_NodeVDB.cc
  houdini/UT_VDBUtils.cc
  houdini/Utils.cc
  )

TARGET_LINK_LIBRARIES ( openvdb_houdini
  openvdb_shared
  )

SET ( OPENVDB_SOP_NAMES "" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Advect" )
LIST ( APPEND OPENVDB_SOP_NAMES "GEO_VDBTranslator" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Advect_Points" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Analysis" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Clip" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Combine" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Convert" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Create" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Diagnostics" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Fill" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Filter" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Filter_Level_Set" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Fracture" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_From_Particles" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_From_Polygons" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_LOD" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Metadata" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Morph_Level_Set" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Noise" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Occlusion_Mask" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Platonic" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Prune" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Rasterize_Points" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Ray" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Read" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Rebuild_Level_Set" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Remap" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Remove_Divergence" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Resample" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Sample_Points" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Sort_Points" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Scatter" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Segment" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_To_Polygons" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_To_Spheres" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Topology_To_Level_Set" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Transform" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Vector_Merge" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Vector_Split" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Visualize" )
LIST ( APPEND OPENVDB_SOP_NAMES "SOP_OpenVDB_Write" )

FOREACH ( SOP_NAME ${OPENVDB_SOP_NAMES} )
  # MESSAGE ( "SOP_NAME = ${SOP_NAME}" )

  HDK_ADD_LIBRARY ( ${SOP_NAME}
    houdini/${SOP_NAME}.cc
    )

  TARGET_LINK_LIBRARIES ( ${SOP_NAME}
    openvdb_houdini
    openvdb_shared
    )

  INSTALL ( TARGETS
    ${SOP_NAME}
    DESTINATION
    ${OPENVDB_HFS_INSTALL_BASE_DIR}/dso
    )

ENDFOREACH ()

# Installation
INSTALL ( TARGETS
  openvdb_houdini
  DESTINATION
  ${OPENVDB_HFS_INSTALL_BASE_DIR}/dso
  )

INSTALL ( FILES
  houdini/DW_OpenVDBRasterizePoints.cmd
  DESTINATION
  ${OPENVDB_HFS_INSTALL_BASE_DIR}/scripts/sop
  )

