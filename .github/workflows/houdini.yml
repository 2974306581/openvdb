
name: Houdini

on:
  push:
    branches:
      - 'master'
      - 'feature/**'
    paths-ignore:
      - 'CHANGES'
      - 'doc/**'
      - 'openvdb_maya/**'
      - 'pendingchanges/**'
      - '**.md'
  pull_request:
    branches:
      - '**'
    paths-ignore:
      - 'CHANGES'
      - 'doc/**'
      - 'openvdb_maya/**'
      - 'pendingchanges/**'
      - '**.md'
  schedule:
    # run this workflow every day at 7am UTC
    - cron:  '0 7 * * *'
  workflow_dispatch:

jobs:
  linux-vfx-houdini:
    if: github.repository_owner == 'AcademySoftwareFoundation'
    runs-on: ubuntu-latest
    name: hou:${{ matrix.config.hou }}-vfx:${{ matrix.config.image }}-cxx:${{ matrix.config.cxx }}
    container:
      image: aswf/ci-base:${{ matrix.config.image }}
    env:
      CXX: ${{ matrix.config.cxx }}
    strategy:
      matrix:
        config:
          # build against VFX Ref 2018 even though it's unsupported, just to make sure that we test Boost 1.61
          - { cxx: clang++, image: '2018', hou: '18_0', j: '2', build: 'Release', components: 'core,hou,bin,python,test,axcore,axbin,axtest', disable_checks: 'ON' }
          - { cxx: clang++, image: '2019', hou: '18_0', j: '2', build: 'Release', components: 'core,hou,bin,python,test,axcore,axbin,axtest', disable_checks: 'OFF' }
          - { cxx: clang++, image: '2020', hou: '18_5', j: '2', build: 'Release', components: 'core,hou,bin,python,test,axcore,axbin,axtest', disable_checks: 'OFF' }
          - { cxx: clang++, image: '2020', hou: '18_5', j: '2', build: 'Debug', components: 'core,hou', disable_checks: 'OFF' }
          - { cxx: g++,     image: '2020', hou: '18_5', j: '1', build: 'Release', components: 'core,hou', disable_checks: 'OFF' }
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - name: install_cmake
      run: ./ci/install_cmake.sh 3.12.0
    - name: install_gtest
      run: ./ci/install_gtest.sh 1.10.0
    - name: fetch_houdini
      uses: actions/cache@v2
      with:
        path: hou
        key: vdb1-houdini${{ matrix.config.hou }}-${{ hashFiles('hou/hou.tar.gz') }}
        restore-keys: vdb1-houdini${{ matrix.config.hou }}-
    - name: validate_houdini
      run: test -f "hou/hou.tar.gz"
    - name: install_houdini
      run: mv hou/hou.tar.gz . && tar -vxzf hou.tar.gz
    - name: build
      shell: bash
      run: >
        cd hou && source houdini_setup_bash && cd - &&
        ./ci/build.sh -v
        -j=${{ matrix.config.j }}
        --build-type=${{ matrix.config.build }}
        --components="${{ matrix.config.components }}"
        --cargs=\"-DOPENVDB_BUILD_HOUDINI_ABITESTS=ON -DOPENVDB_HOUDINI_INSTALL_PREFIX=/tmp -DDISABLE_DEPENDENCY_VERSION_CHECKS=${{ matrix.config.disable_checks }}\"
    - name: test
      run: cd build && ctest -V